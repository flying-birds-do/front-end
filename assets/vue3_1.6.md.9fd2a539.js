import{_ as e,c as t,o as a,a as d}from"./app.5646c3c3.js";const _=JSON.parse('{"title":"vue2自定义指令和vue3的区别","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.1 写法的区别","slug":"_1-1-写法的区别","link":"#_1-1-写法的区别","children":[]},{"level":2,"title":"1.2 生命周期钩子的区别","slug":"_1-2-生命周期钩子的区别","link":"#_1-2-生命周期钩子的区别","children":[]},{"level":2,"title":"1.3 参数不同","slug":"_1-3-参数不同","link":"#_1-3-参数不同","children":[{"level":3,"title":"vue2的参数","slug":"vue2的参数","link":"#vue2的参数","children":[]},{"level":3,"title":"vue3的参数","slug":"vue3的参数","link":"#vue3的参数","children":[]}]}],"relativePath":"vue3/1.6.md"}'),r={name:"vue3/1.6.md"},o=d('<h1 id="vue2自定义指令和vue3的区别" tabindex="-1">vue2自定义指令和vue3的区别 <a class="header-anchor" href="#vue2自定义指令和vue3的区别" aria-hidden="true">#</a></h1><p>这所说的区别主要是组合式setup的形势的区别.</p><h2 id="_1-1-写法的区别" tabindex="-1">1.1 写法的区别 <a class="header-anchor" href="#_1-1-写法的区别" aria-hidden="true">#</a></h2><p>vue2 全局指令通过 directive 参数. 组件指令 directives字段.</p><p>vue3 在 script setup 中，任何以 v 开头的驼峰式命名的变量都可以被用作一个自定义指令</p><h2 id="_1-2-生命周期钩子的区别" tabindex="-1">1.2 生命周期钩子的区别 <a class="header-anchor" href="#_1-2-生命周期钩子的区别" aria-hidden="true">#</a></h2><p>vue2 的生命周期包括 bind insert update componentUpdated unbind</p><p>vue3的生命周期包括 created beforeMount mounted beforeUpdate updated beforeUnmount unmounted</p><h2 id="_1-3-参数不同" tabindex="-1">1.3 参数不同 <a class="header-anchor" href="#_1-3-参数不同" aria-hidden="true">#</a></h2><h3 id="vue2的参数" tabindex="-1">vue2的参数 <a class="header-anchor" href="#vue2的参数" aria-hidden="true">#</a></h3><p>binding：一个对象，包含以下 property： name：指令名，不包括 v- 前缀。 value：指令的绑定值，例如：v-my-directive=&quot;1 + 1&quot; 中，绑定值为 2。 oldValue：指令绑定的前一个值，仅在 update 和 componentUpdated 钩子中可用。无论值是否改变都可用。 expression：字符串形式的指令表达式。例如 v-my-directive=&quot;1 + 1&quot; 中，表达式为 &quot;1 + 1&quot;。 arg：传给指令的参数，可选。例如 v-my-directive:foo 中，参数为 &quot;foo&quot;。 modifiers：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 { foo: true, bar: true }。</p><p>vnode：Vue 编译生成的虚拟节点。移步 VNode API 来了解更多详情。</p><p>oldVnode：上一个虚拟节点，仅在 update 和 componentUpdated 钩子中可用。</p><h3 id="vue3的参数" tabindex="-1">vue3的参数 <a class="header-anchor" href="#vue3的参数" aria-hidden="true">#</a></h3><p>binding：一个对象，包含以下属性。</p><p>value：传递给指令的值。例如在 v-my-directive=&quot;1 + 1&quot; 中，值是 2。 oldValue：之前的值，仅在 beforeUpdate 和 updated 中可用。无论值是否更改，它都可用。 arg：传递给指令的参数 (如果有的话)。例如在 v-my-directive:foo 中，参数是 &quot;foo&quot;。 modifiers：一个包含修饰符的对象 (如果有的话)。例如在 v-my-directive.foo.bar 中，修饰符对象是 { foo: true, bar: true }。 instance：使用该指令的组件实例。 dir：指令的定义对象。</p><p>vnode：代表绑定元素的底层 VNode。</p><p>prevNode：之前的渲染中代表指令所绑定元素的 VNode。仅在 beforeUpdate 和 updated 钩子中可用。</p>',18),i=[o];function u(n,p,v,c,l,s){return a(),t("div",null,i)}const f=e(r,[["render",u]]);export{_ as __pageData,f as default};
